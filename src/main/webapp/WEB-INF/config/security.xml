<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:sec="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 <!-- Security -->
	<sec:http auto-config="true" use-expressions="true">
		<sec:intercept-url pattern="/logged**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<sec:intercept-url pattern="/categoria/**" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/metodoPagamento/**" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/despesa/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
 
		<!-- access denied page -->
		<sec:access-denied-handler error-page="/403" />
 
		<sec:form-login login-page="/login" 
		    default-target-url="/logged" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<sec:logout logout-success-url="/login?logout"  />
		<!-- enable csrf protection -->
		<sec:csrf/>
	</sec:http>
 
	<!-- Select users and user_roles from database -->
	<sec:authentication-manager>
	  <sec:authentication-provider>
	  	<sec:password-encoder hash="md5"/> 
		<sec:jdbc-user-service data-source-ref="postgresDS"
		  users-by-username-query="select login as username, senha as password, ativo as enabled from personal_control.usuario where  login = ?"
		  authorities-by-username-query="select login as username, permissao as role from personal_control.usuario where login = ?  " />
	  </sec:authentication-provider>
	</sec:authentication-manager>
 
 </beans>